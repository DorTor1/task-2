openapi: 3.0.3
info:
  title: СистемаКонтроля API
  version: 1.0.0
  description: REST API для микросервисов управления пользователями и заказами
servers:
  - url: http://localhost:8080/v1
    description: API Gateway (локальная среда)
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ResponseSuccess:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
    ResponseError:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
paths:
  /health:
    get:
      summary: Проверка состояния API
      responses:
        '200':
          description: Сервис доступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
  /users/register:
    post:
      summary: Регистрация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, name]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                name:
                  type: string
      responses:
        '201':
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
        '409':
          description: Пользователь существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /users/login:
    post:
      summary: Вход пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Успешный вход
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
        '401':
          description: Неверные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /users/me:
    get:
      summary: Получение профиля
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Профиль пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    patch:
      summary: Обновление профиля
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Профиль обновлён
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
  /users:
    get:
      summary: Список пользователей
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
        - name: role
          in: query
          schema:
            type: string
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Список пользователей
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
  /orders:
    post:
      summary: Создание заказа
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [userId, totalAmount]
              properties:
                userId:
                  type: string
                totalAmount:
                  type: number
                metadata:
                  type: object
      responses:
        '201':
          description: Заказ создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
    get:
      summary: Список заказов
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
        - name: sort
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Список заказов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
  /orders/{id}:
    get:
      summary: Получение заказа
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Заказ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
    delete:
      summary: Отмена заказа
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Заказ отменён
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
  /orders/{id}/status:
    patch:
      summary: Обновление статуса заказа
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [status]
              properties:
                status:
                  type: string
      responses:
        '200':
          description: Статус обновлён
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'

